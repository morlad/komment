// vim: ft=javascript
var Komment = (function() {

  var self = {}

  self.refreshCounts = function(thread_id) {
    $("div.komment_count").each(function(i, obj) {
      if (thread_id === undefined || $(this).data("komment-id") == thread_id)
      {
        $(this).load("{{.CgiPath}}", {
          r: "c",
          komment_id: $(this).data("komment-id")
        })
      }
    })
  }

  self.refreshMessages = function(thread_id) {
    $("div.komment_messages").each(function(i, obj) {
      if (thread_id === undefined || $(this).data("komment-id") == thread_id)
      {
        $(this).load("{{.CgiPath}}", {
          r: "l",
          komment_id: $(this).data("komment-id")
        })
      }
    })
  }

  self.replaceForms = function() {
    $("div.komment_form").each(function(i, obj) {
      var thread_id = $(this).data("komment-id")
      $(this).load("{{.CgiPath}}", {
        r: "form",
        komment_id: thread_id
      }, function() {
        $(this).ajaxForm({
          resetForm: true,
          data: { r: "a", komment_id: thread_id },
          dataType: "json",
          success: function() {
            // TODO only reload the required counts/messages
            self.refreshCounts(thread_id)
            self.refreshMessages(thread_id)
          },
          error: function() {
            alert("Error!")
          }
        })
      })
    })
  }

  self.init = function() {
    self.replaceForms()
    self.refreshCounts()
    self.refreshMessages()
  }

  return self

}());

function komment_edit_prepare(in_root)
{
  komment_block = $(in_root).closest(".komment_block")
  komment_message = komment_block.find(".komment_message")
  komment_edit = komment_block.find(".komment_edit")

  komment_edit.css("display", "block")
  komment_message.css("display", "none")
}

function komment_edit_unprepare(in_root)
{
  komment_block = $(in_root).closest(".komment_block")
  komment_message = komment_block.find(".komment_message")
  komment_edit = komment_block.find(".komment_edit")

  komment_message.css("display", "block")
  komment_edit.css("display", "none")
}

function komment_edit_send(in_root, in_komment_id)
{
  var komment_id = komment_sanitize_komment_id(in_komment_id)
  $(in_root).ajaxSubmit({
    data: { "r": "e" },
    dataType: 'html',
    success: function(r, s, x, form) {
      komment_edit_unprepare(form.get())
      komment_comments({komment_id: in_komment_id})
    },
    error: function() {
      alert("Error!")
    }
  });

  return false
}


